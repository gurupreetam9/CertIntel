
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users:
    // - Allow any authenticated user to create their own user document.
    // - Allow any authenticated user to read any user document (TEMPORARILY WIDE for debugging).
    // - Allow a user to update only their own specific fields (like displayName, rollNo).
    // - Allow an admin to update specific linkage-related fields on a student's profile.
    // - Deny deletes for now.
    match /users/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null; // TEMPORARILY WIDENED RULE

      allow update: if request.auth != null && (
                      // User updating their own allowed fields
                      (request.auth.uid == userId &&
                       request.resource.data.diff(resource.data).affectedKeys().hasOnly(['displayName', 'rollNo', 'updatedAt'])) ||
                      // Admin updating specific student linkage fields
                      (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' &&
                       resource.data.role == 'student' && // Ensure target is a student
                       request.resource.data.diff(resource.data).affectedKeys().hasOnly(['linkRequestStatus', 'associatedAdminFirebaseId', 'associatedAdminUniqueId', 'updatedAt']))
                    );
      allow delete: if false;
    }

    // Admins Collection (stores unique admin ID mapping)
    // - Allow creation if the user is authenticated and creating their own admin record.
    // - Allow reads by any authenticated user (e.g., for student registration to validate an admin ID).
    match /admins/{adminId} {
      allow create: if request.auth != null && request.auth.uid == adminId;
      allow read: if request.auth != null;
      allow update, delete: if false;
    }

    // StudentLinkRequests Collection
    // - Allow creation if the user is authenticated and creating their own request.
    // - Allow read/update by an authenticated admin if they are the admin targeted by the request.
    match /studentLinkRequests/{requestId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.studentUserId;
      // Admin must be the one targeted in the request to read/update it
      allow read, update: if request.auth != null &&
                              get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' &&
                              resource.data.adminFirebaseId == request.auth.uid &&
                              (request.method == 'get' || request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status', 'resolvedAt', 'resolvedBy']));
      allow delete: if false;
    }

    // Default deny all other paths not explicitly matched
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
